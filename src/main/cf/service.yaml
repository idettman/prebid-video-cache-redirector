AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy a service on AWS Fargate, hosted in a private subnet, but accessible via a public load balancer.
Parameters:
  StackName:
    Type: String
    Default: redirector-network-prod
    Description: The name of the parent Fargate networking stack that you created. Necessary
      to locate and reference resources created by that stack.
  TaskName:
    Type: String
    Default: redirector-task-def
    Description: A name for the task definition
  ContainerName:
    Type: String
    Default: redirector-container
    Description: A name for the container
  ServiceName:
    Type: String
    Default: redirector-service
    Description: A name for the service
  ImageUrl:
    Type: String
    Default: prebid/redirector:latest
    Description: The url of a docker image that contains the application process that
      will handle the traffic for this service
  ContainerPort:
    Type: Number
    Default: 8080
    Description: What port number the application inside the docker container is binding to
  ContainerCpu:
    Type: Number
    Default: 256
    Description: How much CPU to give the container. 1024 is 1 CPU
  ContainerMemory:
    Type: Number
    Default: 512
    Description: How much memory in megabytes to give the container
  DesiredCount:
    Type: Number
    Default: 2
    Description: How many copies of the service task to run
  TaskExecutionRole:
    Type: String
    Default: ecsTaskExecutionRole
    Description: An IAM role to give the tasks for pulling and container images and publishing container logs to Amazon
      CloudWatch

Resources:
  # Task definition.
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'TaskName'
      Cpu: !Ref 'ContainerCpu'
      Memory: !Ref 'ContainerMemory'
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Join ['', [ !Sub 'arn:aws:iam::${AWS::AccountId}:role/', !Ref 'TaskExecutionRole']]
      ContainerDefinitions:
        - Name: !Ref 'ContainerName'
          Cpu: !Ref 'ContainerCpu'
          Memory: !Ref 'ContainerMemory'
          Image: !Ref 'ImageUrl'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'
#          LogConfiguration:
#            LogDriver: awslogs
#            Options:
#              awslogs-group: !Join ['', ['/ecs/', !Ref 'TaskName']]
#              awslogs-region: !Ref 'AWS::Region'
#              awslogs-stream-prefix: 'ecs'

  # autoscaling

  # Service
  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster:
        Fn::ImportValue:
          !Join [':', [!Ref 'StackName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: !Ref 'DesiredCount'
      NetworkConfiguration:
        AwsvpcConfiguration:
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'StackName', 'FargateContainerSG']]
          Subnets:
            - Fn::ImportValue:
                !Join [':', [!Ref 'StackName', 'PrivateSubnetOne']]
            - Fn::ImportValue:
                !Join [':', [!Ref 'StackName', 'PrivateSubnetTwo']]
      TaskDefinition: !Ref 'TaskDefinition'
      LoadBalancers:
        - ContainerName: !Ref 'ContainerName'
          ContainerPort: !Ref 'ContainerPort'
          TargetGroupArn:
            Fn::ImportValue:
              !Join [':', [!Ref 'StackName', 'TargetGroup']]
